{% if item.redirect_https is not defined or item.redirect_https %}
server {
	listen [::]:80 ipv6only=off;
{% if item.domain == 'default' %}
	server_name _;
{% else %}
	server_name {{ item.domain }};
{% endif %}
{% if item.ssl.certbot is defined and item.ssl.certbot %}
	location ~ /\.well-known/acme-challenge {
		root /var/www/acme;
                allow all;
        }
{% endif %}
	location / {
		return 301 https://$host$request_uri;
	}
}

{% endif %}
{% if no_ssl is not defined or not no_ssl %}
server {
{% if item.redirect_https is defined and not item.redirect_https %}
	listen 80{{ ' proxy_protocol' if item.proxied is defined and item.proxied }};
	listen [::]:80{{ ' proxy_protocol' if item.proxied is defined and item.proxied }};
{% endif %}
	listen 443 http2 ssl{{ ' proxy_protocol' if item.proxied is defined and item.proxied }};
	listen [::]:443 http2 ssl{{ ' proxy_protocol' if item.proxied is defined and item.proxied }};
{% if item.domain == 'default' %}
        server_name _;
{% else %}
	server_name {{ item.domain }};
{% endif %}

	error_log /var/log/nginx/error.log;
	access_log /var/log/nginx/access.log;

{% if item.ssl.certificate is defined %}
	ssl_certificate {{ item.ssl.certificate }};
	ssl_certificate_key {{ item.ssl.key }};
{% elif item.ssl.certbot is defined and item.ssl.certbot %}
	ssl_certificate /etc/letsencrypt/live/$ssl_server_name/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/$ssl_server_name/privkey.pem;
{% endif %}
	ssl_dhparam /etc/ssl/dhparams.pem;

	ssl_session_cache shared:le_nginx_SSL:10m;
	ssl_session_timeout 1440m;
	ssl_session_tickets off;
	ssl_protocols TLSv1.2 TLSv1.3;
	ssl_prefer_server_ciphers off;
	ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";

	client_body_timeout 240m;
	client_max_body_size 20m;
	send_timeout 180m;

	resolver 127.0.0.1 [::1] valid=10s;

	location / {
		{{ 'auth_request /auth;' if item.auth is defined and item.auth }}
		proxy_pass {{ item.backend }};

        	proxy_set_header Host $host;
{% if item.proxied is defined and item.proxied %}
        	proxy_set_header X-Real-IP $proxy_x_real_ip;
	        proxy_set_header X-Forwarded-For $proxy_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto;
{% else %}
	        proxy_set_header X-Real-IP $remote_addr;
        	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
{% endif %}
{% if item.ssl.hsts is defined and item.ssl.hsts %}
		add_header Strict-Transport-Security "max-age=31536000" always;
{% endif %}

		proxy_redirect off;
		proxy_buffering off;

		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		proxy_read_timeout 36000s;
		proxy_send_timeout 36000s;
		proxy_connect_timeout 36000s;
	}

{% if item.auth is defined and item.auth %}
	location = /auth {
		internal;
                proxy_pass {{ item.auth.url }};
                proxy_pass_request_body off;
                proxy_set_header Content-Length "";
                proxy_set_header X-Original-URI $request_uri;
{% if item.auth.ldap_group is defined %}
		proxy_set_header X-LDAP-Group "{{ item.auth.ldap_group }}";
{% endif %}
	}
{% endif %}
}
{% endif %}
